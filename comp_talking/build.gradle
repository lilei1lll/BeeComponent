if (isRunAlone.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    resourcePrefix "talking_"

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner rootProject.ext.android.testInstrumentationRunner

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [host: "taking"]
            }
        }
    }

    buildTypes {
        release {
            postprocessing {
                removeUnusedCode false
                removeUnusedResources false
                obfuscate false
                optimizeCode false
                proguardFile 'proguard-rules.pro'
            }
        }
    }

    sourceSets {
        main {
            if (isRunAlone.toBoolean()) {
                manifest.srcFile 'src/main/runalone/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                //集成开发模式下排除runalone文件夹中的所有Java文件
                java {
                    exclude 'runalone/**'
                }
            }
            java.srcDirs = ['src/main/java', 'src/main/runalone/java']
            res.srcDirs = ['src/main/res', 'src/main/runalone/res']
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.android.support:appcompat-v7:$rootProject.ext.dependencies.appcompat"
    testImplementation "junit:junit:$rootProject.ext.dependencies.junit"
    androidTestImplementation "com.android.support.test:runner:$rootProject.ext.dependencies.runner"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.ext.dependencies.espresso_core"

    implementation project(':base')
    annotationProcessor project(':router-compiler')
}
